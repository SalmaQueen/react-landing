{"ast":null,"code":"var _jsxFileName = \"/home/salma/Desktop/react-landing-page/src/Search/filter/index.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getSortOrderValue(sortOrder) {\n  return sortOrder.replace(' ', '').toLowerCase();\n}\n\nfunction getPropertiesDisplayText(count) {\n  if (count > 1 || count === 0) {\n    return 'properties';\n  }\n\n  return 'property';\n}\n\nconst DefaultState = {\n  priceFrom: '',\n  postcode: '',\n  sortOrder: '',\n  sortOrders: ['Highest First', 'Lowest First']\n};\n\nclass Filter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = Object.assign({}, DefaultState);\n\n    this.handleChange = (prop, value) => {\n      this.setState({\n        [prop]: value\n      });\n    };\n  }\n\n  render() {\n    const containerClasses = classnames('container', 'mb-1', styles.container);\n    const formClasses = classnames('form-horizontal', styles.form);\n    const {\n      priceFrom,\n      postcode,\n      sortOrder,\n      sortOrders\n    } = this.state;\n    const {\n      postcodes,\n      count,\n      updateFilter\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: containerClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-cy\": \"property-count\",\n          children: `${count} private ${getPropertiesDisplayText(count)} for sale`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onChange: () => setTimeout(() => updateFilter(this.state), 0),\n          className: formClasses,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1\",\n            children: [\"Refine your results\", /*#__PURE__*/_jsxDEV(\"button\", {\n              \"data-cy\": \"clear-button\",\n              className: \"ml-1 btn btn-sm\",\n              type: \"button\",\n              onClick: () => {\n                this.setState(Object.assign({}, DefaultState));\n                updateFilter({});\n              },\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row row-cols-1 row-cols-md-3 g-4 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" col-4 col-xs-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-8 col-sm-12 ml-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mr-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label \",\n                      htmlFor: \"price-from\",\n                      children: \"Price from\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-input\",\n                    min: \"0\",\n                    max: \"10000000\",\n                    type: \"number\",\n                    id: \"price-from\",\n                    placeholder: \"\\xA31,000,000\",\n                    value: priceFrom,\n                    onChange: event => this.handleChange('priceFrom', Number(event.target.value))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 col-xs-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mr-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    htmlFor: \"postcode\",\n                    children: \"Postcode\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-9 col-sm-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"form-select\",\n                    id: \"postcode\",\n                    value: postcode,\n                    onChange: event => this.handleChange('postcode', event.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Choose...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 23\n                    }, this), postcodes.map(pc => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: pc.toLowerCase(),\n                      children: pc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 25\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column col-4 col-xs-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-3 col-sm-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    htmlFor: \"sortorder\",\n                    children: \"Sort Order\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-9 col-sm-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"form-select\",\n                    id: \"sortorder\",\n                    value: sortOrder,\n                    onChange: event => this.handleChange('sortOrder', event.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Choose...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 23\n                    }, this), sortOrders.map(order => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: getSortOrderValue(order),\n                      children: order\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 25\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Filter;","map":{"version":3,"sources":["/home/salma/Desktop/react-landing-page/src/Search/filter/index.js"],"names":["React","classnames","styles","getSortOrderValue","sortOrder","replace","toLowerCase","getPropertiesDisplayText","count","DefaultState","priceFrom","postcode","sortOrders","Filter","Component","state","Object","assign","handleChange","prop","value","setState","render","containerClasses","container","formClasses","form","postcodes","updateFilter","props","setTimeout","event","Number","target","map","pc","order"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport * as React from 'react'\nimport classnames from 'classnames'\n\nimport styles from './styles.module.css'\n\nfunction getSortOrderValue(sortOrder) {\n  return sortOrder.replace(' ', '').toLowerCase()\n}\n\nfunction getPropertiesDisplayText(count) {\n  if (count > 1 || count === 0) {\n    return 'properties'\n  }\n  return 'property'\n}\n\nconst DefaultState = {\n  priceFrom: '',\n  postcode: '',\n  sortOrder: '',\n  sortOrders: ['Highest First', 'Lowest First']\n}\n\nclass Filter extends React.Component {\n  state = Object.assign({}, DefaultState)\n\n  handleChange = (prop, value) => {\n    this.setState({\n      [prop]: value\n    })\n  }\n\n  render() {\n    const containerClasses = classnames('container', 'mb-1', styles.container)\n    const formClasses = classnames('form-horizontal', styles.form)\n    const { priceFrom, postcode, sortOrder, sortOrders } = this.state\n    const { postcodes, count, updateFilter } = this.props\n\n    return (\n      <aside className=\"mt-2\">\n        <div className={containerClasses}>\n          <h2 data-cy=\"property-count\">\n            {`${count} private ${getPropertiesDisplayText(count)} for sale`}\n          </h2>\n          <form\n            onChange={() => setTimeout(() => updateFilter(this.state), 0)}\n            className={formClasses}\n            noValidate\n          >\n            <p className=\"mb-1\">\n              Refine your results\n              <button\n                data-cy=\"clear-button\"\n                className=\"ml-1 btn btn-sm\"\n                type=\"button\"\n                onClick={() => {\n                  this.setState(Object.assign({}, DefaultState))\n                  updateFilter({})\n                }}\n              >\n                Clear\n              </button>\n            </p>\n            <div className=\"row row-cols-1 row-cols-md-3 g-4 text-center\">\n              <div className=\" col-4 col-xs-12\">\n                <div className=\"form-group\">\n                 \n                  <div className=\"col-8 col-sm-12 ml-2\">\n                  <span className=\"mr-2\">\n                    <label className=\"form-label \" htmlFor=\"price-from\">\n                      Price from\n                    </label>\n                  </span>\n                    <input\n                      className=\"form-input\"\n                      min=\"0\"\n                      max=\"10000000\"\n                      type=\"number\"\n                      id=\"price-from\"\n                      placeholder=\"£1,000,000\"\n                      value={priceFrom}\n                      onChange={event =>\n                        this.handleChange('priceFrom', Number(event.target.value))\n                      }\n                    />\n                  </div>\n\n                </div>\n              </div>\n              \n              <div className=\"col-4 col-xs-12\">\n                <div className=\"form-group\">\n\n                <span className=\"mr-2\">\n                <label className=\"form-label\" htmlFor=\"postcode\">\n                      Postcode\n                    </label>\n                  </span>\n\n                  <div className=\"col-9 col-sm-12\">\n                    <select\n                      className=\"form-select\"\n                      id=\"postcode\"\n                      value={postcode}\n                      onChange={event =>\n                        this.handleChange('postcode', event.target.value)\n                      }\n                    >\n                      <option value=\"\">Choose...</option>\n                      {postcodes.map(pc => (\n                        <option value={pc.toLowerCase()}>{pc}</option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div className=\"column col-4 col-xs-12\">\n                <div className=\"form-group\">\n                  <div className=\"col-3 col-sm-12\">\n                    <label className=\"form-label\" htmlFor=\"sortorder\">\n                      Sort Order\n                    </label>\n                  </div>\n                  <div className=\"col-9 col-sm-12\">\n                    <select\n                      className=\"form-select\"\n                      id=\"sortorder\"\n                      value={sortOrder}\n                      onChange={event =>\n                        this.handleChange('sortOrder', event.target.value)\n                      }\n                    >\n                      <option value=\"\">Choose...</option>\n                      {sortOrders.map(order => (\n                        <option value={getSortOrderValue(order)}>{order}</option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </aside>\n    )\n  }\n}\n\nexport default Filter\n"]},"metadata":{},"sourceType":"module"}